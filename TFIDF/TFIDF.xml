<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TFIDF</name>
    </assembly>
    <members>
        <member name="T:TFIDF.BaseModel">
            <summary>
            Base model which implements the <c>INotifyPropertyChanged</c> interface.
            </summary>
        </member>
        <member name="E:TFIDF.BaseModel.PropertyChanged">
            <summary>
            Property change event.
            </summary>
            <value>Occurs when a property value changes.</value>
        </member>
        <member name="M:TFIDF.BaseModel.RaisePropertyChanged(System.String)">
            <summary>
            This method is called by the Set accessor of each property. The <c>CallerMemberName</c> attribute 
            that is applied to the optional <paramref name="name"/> parameter causes the property 
            name of the caller to be substituted as an argument.
            </summary>
            <param name="name">Name of the property that raised the <see cref="E:TFIDF.BaseModel.PropertyChanged"/> event.</param>
        </member>
        <member name="T:TFIDF.Corpus">
            <summary>
            The class that represents the corpus of the web-topics being processed.
            </summary>
        </member>
        <member name="F:TFIDF.Corpus.concqueue">
            <summary>
            A thread-safe FIFO collection of <c>Topic</c> instances.
            </summary>
            <value>Offers a thread-safe queue for storing the <c>Topic</c> instances generated by multiple threads.</value>
        </member>
        <member name="F:TFIDF.Corpus.topics">
            <summary>
            A collection of <c>Topic</c> instances.
            </summary>
            <value>Stores the <c>Topic</c> instances, when they are not generated using multiple threads.</value>
        </member>
        <member name="F:TFIDF.Corpus.topicNames">
            <summary>
            A list of web-topic names.
            </summary>
            <value>Stores the names of the web-topics (without extension).</value>
        </member>
        <member name="F:TFIDF.Corpus.topicMap">
            <summary>
            A dictionary with topic name as key and <c>Topic</c> instance as value.
            </summary>
            <value>Represents a mapping of topic names with <c>Topic</c> instances.</value>
        </member>
        <member name="F:TFIDF.Corpus.concDict">
            <summary>
            A thread-safe dicitionary for storing <c>Topic</c> instances.
            </summary>
            <value>Offers a thread safe dictionary for storing topics, when topics are generated using multiple threads.</value>
        </member>
        <member name="F:TFIDF.Corpus.targetDir">
            <summary>
            The path from which the web-topics are read.
            </summary>
            <value>Represents the location of the directory in which the source web-topics are stored. 
            <para>Note: The web-topics must reside in this directory and not in sub-directories.</para></value>
        </member>
        <member name="F:TFIDF.Corpus.targetDirInfo">
            <summary>
            A <c>DirectoryInfo</c> instance for <c>targetDir</c>.
            </summary>
            <value>Used for reading web-topics from <c>targetDir</c>.</value>
        </member>
        <member name="F:TFIDF.Corpus.Files">
            <summary>
            An array of <c>FileInfo</c> instances for each web-topic being read.
            </summary>
            <value>Used to iterate over files when creating <c>Topic</c> instances.</value>
        </member>
        <member name="F:TFIDF.Corpus.validFileExtensions">
            <summary>
            A list of valid extensions.
            </summary>
            <value>Represents a list of valid extensions for the web-topics being read.</value>
        </member>
        <member name="F:TFIDF.Corpus.stopwatch">
            <summary>
            A <c>Stopwatch</c> instance.
            </summary>
            <value>Used for measuring time required for generating <c>Topic</c> instances, TFIDF computation, and similarity score computation.</value>
        </member>
        <member name="F:TFIDF.Corpus.ignoreTopicNameEndsWith">
            <summary>
            A list of ending strings to invalidate web-topics.
            </summary>
            <value>Represents a set of substrings which when matched at the end of the web-topic names, results in the topic being ignored from the TFIDF analysis.</value>
        </member>
        <member name="F:TFIDF.Corpus.ignoreTopicNameContains">
            <summary>
            A list of strings to invalidate web-topics.
            </summary>
            <value>Represents a set of substrings which when matched anywhere in the web-topic names, results in the topic being ignored from the TFIDF analysis.</value>
        </member>
        <member name="F:TFIDF.Corpus.ignoreTopicNameStartsWith">
            <summary>
            A list of starting strings to ivalidate web-topics.
            </summary>
            <value>Represents a set of substrings which when matched at the beginning of the web-topic names, results in the topic being ignored from the TFIDF analysis.</value>
        </member>
        <member name="F:TFIDF.Corpus.ignoreTopicName">
            <summary>
            A list of topic names used to invalidate web-topics.
            </summary>
            <value>Represents a set of substrings which when matched at the end of the web-topic names, results in the topic being ignored from the TFIDF analysis.</value>
        </member>
        <member name="F:TFIDF.Corpus.ignoreData">
            <summary>
            A dictionary for gathering the topic invalidation data.
            </summary>
            <value>Represents a container for storing objects used for invalidating web-topics.
            <para>This dictionary is used for passing the ignore data easily to other methods. This dictionary gathers the following fields:
            <list type="bullet">
                <item><term><see cref="F:TFIDF.Corpus.ignoreTopicNameEndsWith"/></term></item>
                <item><term><see cref="F:TFIDF.Corpus.ignoreTopicNameStartsWith"/></term></item>
                <item><term><see cref="F:TFIDF.Corpus.ignoreTopicNameContains"/></term></item>
                <item><term><see cref="F:TFIDF.Corpus.ignoreTopicName"/></term></item>
            </list>
            </para></value>
        </member>
        <member name="F:TFIDF.Corpus.titleTag">
            <summary>
            The HTML tag of the topic title.
            </summary>
        </member>
        <member name="F:TFIDF.Corpus.wordsMax">
            <summary>
            The max word count.
            </summary>
            <value>Represents the number of words of the topic with the highest word count.</value>
        </member>
        <member name="F:TFIDF.Corpus.xrefsMax">
            <summary>
            The max inline link count.
            </summary>
            <value>Represents the number of inline links from the topic with the highest inline link count.</value>
        </member>
        <member name="F:TFIDF.Corpus.relinksMax">
            <summary>
            The max related link count.
            </summary>
            <value>Rpresents the number of related links from the topic with the highest related link count.</value>
        </member>
        <member name="F:TFIDF.Corpus.Mode">
            <summary>
            The selection mode of the related links container.
            </summary>
            <value>Represents the mode of selection, for extracting the parent container tag which includes are the anchor tags of the related links.</value>
        </member>
        <member name="F:TFIDF.Corpus.InnerText">
            <summary>
            The comma separated inner texts of the related links containers.
            </summary>
            <value>Represents a comma separated string of the inner texts of the parent container of the related links.
            <para>Usually web-topics contain related links under a section named <c>See Also</c> or <c>Related Topics</c>. 
            These section headings are passed using this <c>InnerText</c> field.</para></value>
        </member>
        <member name="F:TFIDF.Corpus.CSSSelector">
            <summary>
            The CSS selector of the parent of the related links.
            </summary>
            <value>Represents the CSS Selector of the related link tag.</value>
        </member>
        <member name="F:TFIDF.Corpus.AncestorLevel">
            <summary>
            The ancestor level of the selected tag.
            </summary>
            <value>Sometimes the tag of the section headings for the related links is not their parent tag, but siblings. 
            In such cases, the <c>AncestorLevel</c> field lets you specify which level of parent must be selected that will encapsulate all related links.</value>
        </member>
        <member name="M:TFIDF.Corpus.#ctor(System.String,System.Int32)">
            <summary>
            Initializes the corpus data.
            </summary>
            <param name="directory">The path to the directory (<see cref="F:TFIDF.Corpus.targetDir"/>) that contains the web-topics.</param>
            <param name="maxSize">The max vocabulary size of the lexicon. It represents the maximum number of allowed words in the lexicon.</param>
        </member>
        <member name="M:TFIDF.Corpus.reset_corpus(System.Int32)">
            <summary>
            Resets the corpus data.
            <para>The <c>Corpus</c> must be rebuilt everytime the user loads new web-topics.</para>
            </summary>
            <param name="maxSize">The max vocabulary size of the lexicon. It represents the maximum number of allowed words in the lexicon.</param>
        </member>
        <member name="M:TFIDF.Corpus.read_files(System.String)">
            <summary>
            Returns the files from the given <paramref name="directory"/>.
            </summary>
            <param name="directory">The directory from which the files need to be read.</param>
            <returns>An <c>IEnumerable</c> of the names of the files in the directory.</returns>
        </member>
        <member name="M:TFIDF.Corpus.initializeDict">
            <summary>
            Initializes the concurrent dictionary used to store the computed topic data.
            Note: Concurrent dictionary allows thread-safe access to the class instance resources for multi-threading.
            </summary>
        </member>
        <member name="M:TFIDF.Corpus.generate_topics">
            <summary>
            Generates the <c>Topic</c> instances from the files in the directory.
            </summary>
        </member>
        <member name="M:TFIDF.Corpus.calculate_tfidf_scores">
            <summary>
            Calculates the TFIDF scores for each topic.
            </summary>
        </member>
        <member name="M:TFIDF.Corpus.calculate_topic_similarity_scores">
            <summary>
            Calculates the similarity scores for each topic and stores it in the <c>similarityScores</c> list of the <c>Topic</c> instance.
            </summary>
        </member>
        <member name="M:TFIDF.Corpus.generate_topics_async">
            <summary>
            Generates <c>Topic</c> instances from files in the directory using multi-threading.
            </summary>
        </member>
        <member name="M:TFIDF.Corpus.calculate_tfidf_scores_async">
            <summary>
            Calculates the TFIDF scores for each topic using multi-threading.
            </summary>
        </member>
        <member name="M:TFIDF.Corpus.calculate_topic_similarity_scores_async">
            <summary>
            Calculates the similarity scores for each topic using multi-threading.
            </summary>
        </member>
        <member name="M:TFIDF.Corpus.calculate_tfidf_scores_parallel">
            <summary>
            Calculates the TFIDF scores of each topic using parallel computing.
            </summary>
        </member>
        <member name="M:TFIDF.Corpus.instantiate_topic(System.IO.FileInfo,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Collections.Generic.Dictionary{System.String,System.String},System.Int32,System.String)">
            <summary>
            Instantiates the <c>Topic</c> class for each file in the directory ignoring files which do not comply with the data stored in <see cref="F:TFIDF.Corpus.ignoreData"/>.
            </summary>
            <param name="file">The file against which the <c>Topic</c> instance is to be generated.</param>
            <param name="directory">The path of directory of the file.</param>
            <param name="ignoreData">Contains data to verify if the filename complies with configured options.</param>
            <param name="selectionData">Contains data used for extracting related links from the file.</param>
            <returns></returns>
        </member>
        <member name="M:TFIDF.Corpus.update_lexicon(TFIDF.Topic)">
            <summary>
            Appends new words from the given topic to the <see cref="T:TFIDF.Lexicon"/>.
            The size of the lexicon grows as we call this method on each topic instantiation.
            </summary>
            <param name="topic">The topic whose words are being considered for updating the <see cref="T:TFIDF.Lexicon"/>.</param>
        </member>
        <member name="M:TFIDF.Corpus.cosine_similarity(TFIDF.Topic,TFIDF.Topic)">
            <summary>
            Computes the cosine similarity between the TFIDF vectors of two given topics.
            </summary>
            <param name="source">The source topic.</param>
            <param name="target">The target topic.</param>
            <returns>The cosine similarity score between the topics.</returns>
        </member>
        <member name="M:TFIDF.Corpus.get_similar_topics(TFIDF.Topic,System.Int32)">
            <summary>
            Returns an IEnumerable of similar <c>Topic</c> instances for a given topic (<paramref name="topic"/>).
            The size of the IEnumerable is equal to the requested number (<paramref name="numOfTopics"/>) of similar topics.
            </summary>
            <param name="topic"> The topic for which other similar topics are to be found.</param>
            <param name="numOfTopics"> The number of similar topics to be found.</param>
            <returns></returns>
        </member>
        <member name="M:TFIDF.Corpus.get_similarity_score(TFIDF.Topic,TFIDF.Topic)">
            <summary>
            Returns a similarity score (0 to 1) between two given topics.
            <para>0 -> No similarity</para>
            <para>1 -> Complete similarity</para>
            </summary>
            <param name="sourceTopic">The source topic.</param>
            <param name="targetTopic">The target topic.</param>
            <returns></returns>
        </member>
        <member name="M:TFIDF.Corpus.get_similar_words(TFIDF.Topic,TFIDF.Topic,System.Int32)">
            <summary>
            Finds a list of commnon words between the two given topics.
            </summary>
            <param name="sourceTopic">The source topic.</param>
            <param name="targetTopic">The target topic.</param>
            <param name="numOfWords">Number of most common words.</param>
            <returns></returns>
        </member>
        <member name="M:TFIDF.Corpus.compute_max">
            <summary>
            Computes the highest number of words, inline links, and related links found in a topic.
            </summary>
        </member>
        <member name="T:TFIDF.ExtensionMethods">
            <summary>
            A class for defining extension methods.
            </summary>
        </member>
        <member name="M:TFIDF.ExtensionMethods.tokenize(System.String)">
            <summary>
            Tokeninzes a given text string into words.
            </summary>
            <param name="text">The text being tokanized.</param>
            <returns>An array of tokenized words.</returns>
        </member>
        <member name="M:TFIDF.ExtensionMethods.lemmatize(System.String[])">
            <summary>
            Lemmatizes a given array of words.
            </summary>
            <param name="words">An array of words which needs to be lemmatized.</param>
            <returns></returns>
        </member>
        <member name="M:TFIDF.ExtensionMethods.clean_links(System.Collections.Generic.List{System.String})">
            <summary>
            Takes a list of strings as argument and generates a set out of the strings by skipping empty strings.
            </summary>
            <param name="links">A list of strings.</param>
            <returns>A set of strings which has no empty strings.</returns>
        </member>
        <member name="M:TFIDF.ExtensionMethods.SplitAndKeep(System.String,System.Char[])">
            <summary>
            Splits a given string (<paramref name="inputString"/>) 
            into substrings using a set of characters (<paramref name="delimiters"/>).
            </summary>
            <param name="inputString">The string to be split.</param>
            <param name="delimiters">The delimiting characters for splitting the string.</param>
            <returns></returns>
        </member>
        <member name="T:TFIDF.Lexicon">
            <summary>
            The class that represents the lexicon/vocabulary of a given corpus of topics.
            </summary>
        </member>
        <member name="F:TFIDF.Lexicon.words">
            <summary>
            An <c>IEnumerable</c> of words of the lexicon.
            </summary>
            <value>The words that compose the lexicon.</value>
        </member>
        <member name="F:TFIDF.Lexicon.MaxVocabSize">
            <summary>
            Maximum vocabulary size.
            </summary>
            <value>The maximum number of words allowed to be part of the lexicon.</value>
        </member>
        <member name="F:TFIDF.Lexicon.wordsDictionary">
            <summary>
            A dictionary for storing word counts.
            </summary>
            <value>A threa-safe dictionary for storing counts of the words in the lexicon.</value>
        </member>
        <member name="M:TFIDF.Lexicon.update_from(System.Collections.Generic.List{System.String})">
            <summary>
            Updates the counts of words of the lexicon from a give list of tokens (<paramref name="tokens"/>).
            </summary>
            <param name="tokens">A list of tokens.</param>
        </member>
        <member name="M:TFIDF.Lexicon.update_lexicon_words">
            <summary>
            Updates the words of the lexicon from the word-count dictionary (<see cref="F:TFIDF.Lexicon.wordsDictionary"/>).
            </summary>
        </member>
        <member name="T:TFIDF.MLPipeline">
            <summary>
            The class that creates the machine learning pipeline.
            </summary>
        </member>
        <member name="F:TFIDF.MLPipeline.mlengine">
            <summary>
            Prediction engine for making predictions.
            </summary>
            <value>The ML engine used for predictions using previously trained model.</value>
        </member>
        <member name="M:TFIDF.MLPipeline.#ctor">
            <summary>
            Creates a machine learning engine for transforming text data. 
            The engine takes text data, tokenizes it into words, and removes the stop words.
            </summary>
        </member>
        <member name="T:TFIDF.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:TFIDF.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:TFIDF.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:TFIDF.Properties.Resources.full7z_mlteast_en_modified">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="T:TFIDF.TextData">
            <summary>
            The class that represents the text data to be provided to the ML engine.
            </summary>
        </member>
        <member name="P:TFIDF.TextData.Text">
            <summary>
            Text string to be passed for creating the ML engine.
            </summary>
            <value>Text used to fit train the text transformer of the engine.</value>
        </member>
        <member name="T:TFIDF.TFIDF">
            <summary>
            The class that handles the TFIDF computation for each <c>Topic</c> instance.
            </summary>
        </member>
        <member name="F:TFIDF.TFIDF.tfidfVector">
            <summary>
            Term-Frequency Inverse Document-Frequency vector for the topic.
            </summary>
            <value>TThis vector stores the TFIDF scores of each word of the lexicon that appears in the given topic. 
            This vector is later used for computing cosine similarity between topics.
            <para>The length of the vector is equal to the maximum vocabulary size of the <see cref="T:TFIDF.Lexicon"/>.</para></value>
        </member>
        <member name="F:TFIDF.TFIDF.tfVector">
            <summary>
            Term-Frequency vector for the topic.
            </summary>
            <value>This vector stores the TF scores of each word of the lexicon that appears in the given topic.
            The higher the score of a word in the vector, the more are the occurances of the word in the topic.
            <para>The length of the vector is equal to the maximum vocabulary size of the <see cref="T:TFIDF.Lexicon"/>.</para></value>
        </member>
        <member name="F:TFIDF.TFIDF.idfVector">
            <summary>
            Inverse Document-Frequency vector for the topic.
            </summary>
            <value>This vector stores the IDF scores of each word of the lexicon that appears in the given topic.
            The higher the score of a word in the vector, the more unique is the word for the topic.
            <para>The length of the vector is equal to the maximum vocabulary size of the <see cref="T:TFIDF.Lexicon"/>.</para></value>
        </member>
        <member name="F:TFIDF.TFIDF.wordCountVector">
            <summary>
            Word count vector for the topic.
            </summary>
            <value>This vector stores the number of occurances of each word of the lexicon that appears in the given topic.
            <para>The length of the vector is equal to the maximum vocabulary size of the <see cref="T:TFIDF.Lexicon"/>.</para></value>
        </member>
        <member name="F:TFIDF.TFIDF.similarityScores">
            <summary>
            Similarity scores of each topic with the given topic.
            </summary>
            <value>This vector stores the cosine similarity scores of the topic with every topic in the corpus.
            <para>The length of the vector is equal to the number of topics in the corpus.</para></value>
        </member>
        <member name="M:TFIDF.TFIDF.#ctor(TFIDF.Topic,System.Collections.Generic.List{TFIDF.Topic})">
            <summary>
            Computes the words counts and TFIDF scores.
            </summary>
            <param name="topic">The topic being analyzed.</param>
            <param name="topics">The list of topics in the corpus.</param>
        </member>
        <member name="T:TFIDF.Topic">
            <summary>
            The class that is intantiated for each web-topic in the corpus.
            </summary>
        </member>
        <member name="P:TFIDF.Topic.topicName">
            <summary>
            Title of the topic.
            </summary>
            <value>The base name of the topic without the extension.</value>
        </member>
        <member name="P:TFIDF.Topic.fileName">
            <summary>
            Name of the topic/file.
            </summary>
            <value>The name of the file associated with the topic.</value>
        </member>
        <member name="P:TFIDF.Topic.text">
            <summary>
            Text content of the topic.
            </summary>
            <value>The text extracted from the web-topic which the <c>Topic</c> instance represents.</value>
        </member>
        <member name="P:TFIDF.Topic.sentCount">
            <summary>
            Number of sentences in the topic.
            </summary>
            <value>The number of sentences extracted from the topic <see cref="P:TFIDF.Topic.text"/>.</value>
        </member>
        <member name="P:TFIDF.Topic.xrefs">
            <summary>
            URIs that the inline links (<see cref="P:TFIDF.Topic.xrefs"/>) point to.
            </summary>
            <value>The list of <c>href</c> attribute values of inline links in the topic. 
            Inline links usually appear in the body of the topic, inline with the description.
            <para>The DITA specification specifies the use of <c>xref</c> markup element for generating inline links.</para></value>
        </member>
        <member name="P:TFIDF.Topic.xrefTags">
            <summary>
            Inline link tags in the topic.
            </summary>
            <value>The list of inline hyperlinks extracted from the body of the topic.</value>
        </member>
        <member name="P:TFIDF.Topic.relinks">
            <summary>
            URIs that the related links (<see cref="P:TFIDF.Topic.relinks"/>) point to.
            </summary>
            <value>The list of <c>href</c> attribute values of related links in the topic. 
            Related links usually appear in separate section after the body of the topic.
            <para>The DITA specification specifies the use of <c>related-links</c> markup element for generating related links.</para></value>
        </member>
        <member name="P:TFIDF.Topic.relinkTags">
            <summary>
            Related link tags in the topic.
            </summary>
            <value>The list of the related links extracted from a separate section, usually highlighted as <c>See Also</c> or <c>Related Topics</c>.</value>
        </member>
        <member name="F:TFIDF.Topic.words">
            <summary>
            Words in the topic.
            </summary>
            <value>The list of all the words in the topic, including multiple occurances.</value>
        </member>
        <member name="P:TFIDF.Topic.path">
            <summary>
            Path of the topic.
            </summary>
            <value>The path of the topic.</value>
        </member>
        <member name="P:TFIDF.Topic.tfidf">
            <summary>
            <c>TFIDF</c> instance associated with the topic.
            </summary>
            <value>The <c>TFIDF</c> instance which stores all information about TFIDF analysis related to the topic. </value>
        </member>
        <member name="P:TFIDF.Topic.Mode">
            <summary>
            The selection mode of the related links container.
            </summary>
            <value>Represents the mode of selection, for extracting the parent container tag which includes are the anchor tags of the related links.</value>
        </member>
        <member name="P:TFIDF.Topic.InnerText">
            <summary>
            The comma separated inner texts of the related links containers.
            </summary>
            <value>Represents a comma separated string of the inner texts of the parent container of the related links.
            <para>Usually web-topics contain related links under a section named <c>See Also</c> or <c>Related Topics</c>. 
            These section headings are passed using this <c>InnerText</c> field.</para></value>
        </member>
        <member name="P:TFIDF.Topic.CSSSelector">
            <summary>
            The CSS selector of the parent of the related links.
            </summary>
            <value>Represents the CSS Selector of the related link tag.</value>
        </member>
        <member name="P:TFIDF.Topic.AncestorLevel">
            <summary>
            The ancestor level of the selected tag.
            </summary>
            <value>Sometimes the tag of the section headings for the related links is not their parent tag, but siblings. 
            In such cases, the <c>AncestorLevel</c> field lets you specify which level of parent must be selected that will encapsulate all related links.</value>
        </member>
        <member name="M:TFIDF.Topic.#ctor(System.String,System.String,HtmlAgilityPack.HtmlDocument,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Collections.Generic.Dictionary{System.String,System.String},System.Int32,System.String)">
            <summary>
            Instantiates <see cref="T:TFIDF.Topic"/> class for a web-topic.
            </summary>
            <param name="name">Base name of the topic without its extension.</param>
            <param name="filePath">Path of the topic.</param>
            <param name="html"><c>HTML</c> document that represents the topic.</param>
            <param name="ignoreData">Configuration settings for invalidating topics.</param>
            <param name="selectionOptions">Selection options for the parent container of related links.</param>
            <param name="level">Ancestor level of the parent tag which encapsulates all related links.</param>
        </member>
        <member name="M:TFIDF.Topic.Is_valid(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}})">
            <summary>
            Checks the validity of a file from its name.
            </summary>
            <param name="filename">Topic name to be checked for validity.</param>
            <param name="ignoreData">Data dictionary containing configured naming conventions.</param>
            <returns><c>true</c> if the filename complies with the configured naming conventions, else <c>false</c>.</returns>
        </member>
        <member name="M:TFIDF.Topic.get_topic_title(HtmlAgilityPack.HtmlDocument,System.String)">
            <summary>
            Extracts the title of the topic (first occurance of the title tag e.g. h1, h2, etc)
            </summary>
            <param name="doc">The <c>HTML</c> document of the topic.</param>
            <param name="titleTag">HTML tag of the topic title</param>
            <returns>The title of the topic.</returns>
        </member>
        <member name="M:TFIDF.Topic.get_topic_text(HtmlAgilityPack.HtmlDocument)">
            <summary>
            Extracts the text content from a given <c>HTML</c> document.
            </summary>
            <param name="doc">The <c>HTML</c> document whose text is requested.</param>
            <returns>Topic text in the form of a string.</returns>
        </member>
        <member name="M:TFIDF.Topic.get_existing_links(HtmlAgilityPack.HtmlDocument)">
            <summary>
            Extracts hyperlink data (inline links and related links) from the given <c>HTML</c> document.
            </summary>
            <param name="doc">The document from which the links are to be extracted.</param>
            <returns>A dictionary containing the inline links (<see cref="P:TFIDF.Topic.xrefs"/>) and related links (<see cref="P:TFIDF.Topic.relinks"/>) in the topic.</returns>
        </member>
        <member name="M:TFIDF.Topic.get_related_links(HtmlAgilityPack.HtmlDocument)">
            <summary>
            Extracts all the related links from the <c>HTML</c> document (<paramref name="doc"/>).
            </summary>
            <param name="doc">The <c>HTML</c> document.</param>
        </member>
        <member name="M:TFIDF.Topic.get_all_link_names">
            <summary>
            Returns a list of names of all the links in the topic.
            </summary>
            <returns>A combined list of names of inline and related links.</returns>
        </member>
        <member name="M:TFIDF.Topic.get_all_words">
            <summary>
            Extracts all valid words from the topic text.
            </summary>
            <returns>List of valid words after removing punctuation, symbols, and numbers from the topic text.</returns>
        </member>
        <member name="M:TFIDF.Topic.CountTokenizedSentences(System.String)">
            <summary>
            Extracts all sentences from the topic text.
            </summary>
            <param name="text">Text to be tokenized into sentences.</param>
            <returns>Sentences from the topic text.</returns>
        </member>
        <member name="M:TFIDF.Topic.get_nth_parent(HtmlAgilityPack.HtmlNode,System.Int32)">
            <summary>
            Finds the <c>n</c>th <paramref name="level"/> parent of selected tag (<paramref name="selectedTag"/>). 
            </summary>
            <param name="selectedTag">The tag selected from the <c>HTML</c> document.</param>
            <param name="level">Ancestor level</param>
            <returns></returns>
        </member>
        <member name="T:TFIDF.TransformedTextData">
            <summary>
            The class that represents the data being output by the ML engine.
            </summary>
        </member>
        <member name="P:TFIDF.TransformedTextData.Words">
            <summary>
            Transformed text data.
            </summary>
            <value>An array of predicted words created at the end of the text transformation pipeline.</value>
        </member>
    </members>
</doc>
