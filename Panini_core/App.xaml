<Application x:Class="Panini_core.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Panini_core" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             StartupUri="MainWindow.xaml">
  <Application.Resources>

    <!-- Fonts -->
    <FontFamily x:Key="Cairo">pack://application:,,,/Fonts/Cairo/#Cairo</FontFamily>
    <FontFamily x:Key="Ubuntu">pack://application:,,,/Fonts/Ubuntu/#Ubuntu</FontFamily>

    <!-- Theme Colors -->
    <SolidColorBrush x:Key="c0"
                     Color="#FAF3F3" />
    <SolidColorBrush x:Key="c1"
                     Color="#FAFAFA" />
    <SolidColorBrush x:Key="c2"
                     Color="#A7BBC7" />
    <SolidColorBrush x:Key="c3"
                     Color="#DA7F8F" />
    <SolidColorBrush x:Key="blue"
                     Color="#16bcf9" />
    <SolidColorBrush x:Key="green"
                     Color="#1bcc00" />

    <ResourceDictionary x:Key="materials">
      <ResourceDictionary.MergedDictionaries>
        <materialDesign:BundledTheme BaseTheme="Light" PrimaryColor="DeepPurple" SecondaryColor="Lime" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />

        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
      </ResourceDictionary.MergedDictionaries>
    </ResourceDictionary>

    <!-- Base style for list view items -->
    <Style x:Key="{x:Type ListViewItem}" TargetType="ListViewItem">
      <Setter Property="SnapsToDevicePixels" Value="true"/>
      <Setter Property="OverridesDefaultStyle" Value="true"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ListViewItem">
            <Border Name="Border" Padding="2" SnapsToDevicePixels="true" Background="Transparent">
              <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsSelected" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#d9d9d9"/>

              </Trigger>
              <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#d9d9d9"/>
                <Setter Property="Cursor" Value="Hand"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- Base style for list box items -->
    <Style x:Key="{x:Type ListBoxItem}" TargetType="ListBoxItem">
      <Setter Property="SnapsToDevicePixels" Value="true"/>
      <Setter Property="OverridesDefaultStyle" Value="true"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ListBoxItem">
            <Border Name="Border" Padding="2" SnapsToDevicePixels="true" Background="Transparent">
              <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsSelected" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#d9d9d9"/>

              </Trigger>
              <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#d9d9d9"/>
                <Setter Property="Cursor" Value="Hand"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    
    <!-- Base style for checkbox -->
    <Style TargetType="CheckBox">
      <Setter Property="Background" Value="Transparent"/>
    </Style>

    <!-- Base style for radio button -->
    <Style TargetType="RadioButton">
      <Setter Property="Background" Value="Transparent"/>
    </Style>
    
    <!-- PackIcon style -->
    <Style TargetType="md:PackIcon">
      <Setter Property="Width" Value="26"/>
      <Setter Property="Height" Value="26"/>
      <Setter Property="HorizontalAlignment" Value="Center"/>
      <Setter Property="Opacity" Value="0.7"></Setter>
      <Setter Property="Foreground" Value="#3b00a8"/>
    </Style>
    
    <!-- Textbox style -->
    <Style TargetType="{x:Type TextBox}">
      <Setter Property="Background"
              Value="Transparent" />
    </Style>

    <Style TargetType="{x:Type DataGrid}">
      <Setter Property="Background" Value="LightGray"/>
    </Style>
    <Style TargetType="{x:Type DataGridRow}">
      <Setter Property="Background" Value="Transparent"/>
    </Style>
    <Style TargetType="{x:Type DataGridRowHeader}">
      <Setter Property="Background" Value="Transparent"/>
    </Style>
    <Style TargetType="{x:Type DataGridColumnHeader}">
      <!--<Setter>
        <Setter.Property>Background</Setter.Property>
        <Setter.Value>
          <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientStop Color="#6c1cff" Offset="0"/>
            <GradientStop Color="#3b00a8" Offset="1.0"/>
          </LinearGradientBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Foreground" Value="White"/>-->
      <Setter Property="Background" Value="#d9d9d9"/>
      <Setter Property="Height" Value="25"/>
    </Style>
    <Style TargetType="{x:Type TextBlock}">
      <Setter Property="Margin" Value="5 0 5 0"/>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}">
      <Setter Property="Background" Value="Transparent" />
    </Style>

    <!-- Expander Styles -->
    <Style TargetType="Border"
             x:Key="RacePitBorderStyle">
      <Style.Resources>
        <LinearGradientBrush x:Key="BackBrush"
                               StartPoint="0.5,0"
                               EndPoint="0.5,1">
          <GradientStop Color="#E0E0E0"
                          Offset="0.1" />
          <GradientStop Color="#E0E0E0"
                          Offset="0.9" />
        </LinearGradientBrush>
      </Style.Resources>
      <Setter Property="Background"
                Value="Transparent" />
    </Style>

    <DataTemplate x:Key="titleText">
      <Border Style="{StaticResource RacePitBorderStyle}"
                Height="24">
        <TextBlock Text="{Binding}"
                     Margin="4 0"
                     VerticalAlignment="Center"
                     Foreground="Black"
                     FontSize="14"
                     FontWeight="SemiBold"
                     Width="{Binding
                        RelativeSource={RelativeSource
                        Mode=FindAncestor,
                        AncestorType={x:Type ListView}},
                        Path=ActualWidth}"
                     TextWrapping="Wrap"
                     Background="Transparent">
        </TextBlock>
      </Border>
    </DataTemplate>

    <Style TargetType="{x:Type Expander}">
      <Setter Property="HeaderTemplate"
                Value="{StaticResource titleText}" />
    </Style>
    
  </Application.Resources>
</Application>
