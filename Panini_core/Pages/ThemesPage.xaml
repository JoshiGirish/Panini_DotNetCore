<Page x:Class="Panini.Pages.ThemesPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Panini.Pages"
      xmlns:vm="clr-namespace:Panini.ViewModel"
      xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
      xmlns:fa="http://schemas.fontawesome.io/icons/"
      xmlns:beh="http://schemas.microsoft.com/xaml/behaviors"
      xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
      xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Royale"
      mc:Ignorable="d"
      d:DesignHeight="450"
      d:DesignWidth="800"
      d:Background="White"
      Title="ThemesPage">
  <Page.DataContext>
    <vm:ThemesViewModel />
  </Page.DataContext>
  <!-- Page resources -->
  <Page.Resources>

    <vm:BooleanValueConverter x:Key="converterKey" />
    <Style x:Key="commonStyle"
           TargetType="Control">
      <Setter Property="FontSize"
              Value="14" />
      <Setter Property="VerticalAlignment"
              Value="Center" />
      <Setter Property="Background"
              Value="Transparent" />
    </Style>
    <Style BasedOn="{StaticResource commonStyle}"
           TargetType="Label" />
    <Style BasedOn="{StaticResource commonStyle}"
           TargetType="TextBox" />
    <Style BasedOn="{StaticResource commonStyle}"
           TargetType="CheckBox" />
    <Style BasedOn="{StaticResource commonStyle}"
           TargetType="RadioButton" />
    <Style x:Key="FocusVisual">
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate>
            <Rectangle Margin="2"
                       StrokeDashArray="1 2"
                       SnapsToDevicePixels="true"
                       StrokeThickness="1"
                       Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <SolidColorBrush x:Key="TextBox.Static.Background"
                     Color="#FFFFFFFF" />
    <Style x:Key="ComboBoxEditableTextBox"
           TargetType="{x:Type TextBox}">
      <Setter Property="OverridesDefaultStyle"
              Value="true" />
      <Setter Property="AllowDrop"
              Value="true" />
      <Setter Property="MinWidth"
              Value="0" />
      <Setter Property="MinHeight"
              Value="0" />
      <Setter Property="FocusVisualStyle"
              Value="{x:Null}" />
      <Setter Property="ScrollViewer.PanningMode"
              Value="VerticalFirst" />
      <Setter Property="Stylus.IsFlicksEnabled"
              Value="False" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type TextBox}">
            <ScrollViewer x:Name="PART_ContentHost"
                          Background="Transparent"
                          Focusable="false"
                          HorizontalScrollBarVisibility="Hidden"
                          VerticalScrollBarVisibility="Hidden" />
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <LinearGradientBrush x:Key="ComboBox.Static.Background"
                         EndPoint="0,1"
                         StartPoint="0,0">
      <GradientStop Color="#FFF0F0F0"
                    Offset="0.0" />
      <GradientStop Color="#FFE5E5E5"
                    Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Static.Border"
                     Color="#FFACACAC" />
    <SolidColorBrush x:Key="ComboBox.Static.Glyph"
                     Color="#FF606060" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Background"
                     Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Border"
                     Color="#FFABADB3" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background"
                     Color="Transparent" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border"
                     Color="Transparent" />
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Background"
                         EndPoint="0,1"
                         StartPoint="0,0">
      <GradientStop Color="#FFECF4FC"
                    Offset="0.0" />
      <GradientStop Color="#FFDCECFC"
                    Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Border"
                     Color="#FF7EB4EA" />
    <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph"
                     Color="#FF000000" />
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background"
                     Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border"
                     Color="#FF7EB4EA" />
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background"
                         EndPoint="0,1"
                         StartPoint="0,0">
      <GradientStop Color="#FFEBF4FC"
                    Offset="0.0" />
      <GradientStop Color="#FFDCECFC"
                    Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border"
                     Color="#FF7EB4EA" />
    <LinearGradientBrush x:Key="ComboBox.Pressed.Background"
                         EndPoint="0,1"
                         StartPoint="0,0">
      <GradientStop Color="#FFDAECFC"
                    Offset="0.0" />
      <GradientStop Color="#FFC4E0FC"
                    Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Border"
                     Color="#FF569DE5" />
    <SolidColorBrush x:Key="ComboBox.Pressed.Glyph"
                     Color="#FF000000" />
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background"
                     Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border"
                     Color="#FF569DE5" />
    <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background"
                         EndPoint="0,1"
                         StartPoint="0,0">
      <GradientStop Color="#FFDAEBFC"
                    Offset="0.0" />
      <GradientStop Color="#FFC4E0FC"
                    Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border"
                     Color="#FF569DE5" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Background"
                     Color="#FFF0F0F0" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Border"
                     Color="#FFD9D9D9" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Glyph"
                     Color="#FFBFBFBF" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background"
                     Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border"
                     Color="#FFBFBFBF" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background"
                     Color="Transparent" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border"
                     Color="Transparent" />
    <Style x:Key="ComboBoxToggleButton"
           TargetType="{x:Type ToggleButton}">
      <Setter Property="OverridesDefaultStyle"
              Value="true" />
      <Setter Property="IsTabStop"
              Value="false" />
      <Setter Property="Focusable"
              Value="false" />
      <Setter Property="ClickMode"
              Value="Press" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ToggleButton}">
            <Border x:Name="templateRoot"
                    Background="{StaticResource ComboBox.Static.Editable.Background}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{StaticResource ComboBox.Static.Border}"
                    SnapsToDevicePixels="true">
              <Border x:Name="splitBorder"
                      BorderThickness="1"
                      BorderBrush="Transparent"
                      HorizontalAlignment="Right"
                      Margin="0"
                      SnapsToDevicePixels="true"
                      Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                <Path x:Name="arrow"
                      Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                      Fill="{StaticResource ComboBox.Static.Glyph}"
                      HorizontalAlignment="Center"
                      Margin="0"
                      VerticalAlignment="Center" />
              </Border>
            </Border>
            <ControlTemplate.Triggers>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="true" />
                  <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                             Value="false" />
                  <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                             Value="false" />
                  <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                             Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        TargetName="templateRoot"
                        Value="{StaticResource ComboBox.Static.Editable.Background}" />
                <Setter Property="BorderBrush"
                        TargetName="templateRoot"
                        Value="{StaticResource ComboBox.Static.Editable.Border}" />
                <Setter Property="Background"
                        TargetName="splitBorder"
                        Value="{StaticResource ComboBox.Static.Editable.Button.Background}" />
                <Setter Property="BorderBrush"
                        TargetName="splitBorder"
                        Value="{StaticResource ComboBox.Static.Editable.Button.Border}" />
              </MultiDataTrigger>
              <Trigger Property="IsMouseOver"
                       Value="true">
                <Setter Property="Fill"
                        TargetName="arrow"
                        Value="{StaticResource ComboBox.MouseOver.Glyph}" />
              </Trigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                             Value="true" />
                  <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="false" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        TargetName="templateRoot"
                        Value="{StaticResource ComboBox.MouseOver.Background}" />
                <Setter Property="BorderBrush"
                        TargetName="templateRoot"
                        Value="{StaticResource ComboBox.MouseOver.Border}" />
              </MultiDataTrigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                             Value="true" />
                  <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        TargetName="templateRoot"
                        Value="{StaticResource ComboBox.MouseOver.Editable.Background}" />
                <Setter Property="BorderBrush"
                        TargetName="templateRoot"
                        Value="{StaticResource ComboBox.MouseOver.Editable.Border}" />
                <Setter Property="Background"
                        TargetName="splitBorder"
                        Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}" />
                <Setter Property="BorderBrush"
                        TargetName="splitBorder"
                        Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}" />
              </MultiDataTrigger>
              <Trigger Property="IsPressed"
                       Value="true">
                <Setter Property="Fill"
                        TargetName="arrow"
                        Value="{StaticResource ComboBox.Pressed.Glyph}" />
              </Trigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                             Value="true" />
                  <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="false" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        TargetName="templateRoot"
                        Value="{StaticResource ComboBox.Pressed.Background}" />
                <Setter Property="BorderBrush"
                        TargetName="templateRoot"
                        Value="{StaticResource ComboBox.Pressed.Border}" />
              </MultiDataTrigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                             Value="true" />
                  <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        TargetName="templateRoot"
                        Value="{StaticResource ComboBox.Pressed.Editable.Background}" />
                <Setter Property="BorderBrush"
                        TargetName="templateRoot"
                        Value="{StaticResource ComboBox.Pressed.Editable.Border}" />
                <Setter Property="Background"
                        TargetName="splitBorder"
                        Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}" />
                <Setter Property="BorderBrush"
                        TargetName="splitBorder"
                        Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}" />
              </MultiDataTrigger>
              <Trigger Property="IsEnabled"
                       Value="false">
                <Setter Property="Fill"
                        TargetName="arrow"
                        Value="{StaticResource ComboBox.Disabled.Glyph}" />
              </Trigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                             Value="false" />
                  <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="false" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        TargetName="templateRoot"
                        Value="{StaticResource ComboBox.Disabled.Background}" />
                <Setter Property="BorderBrush"
                        TargetName="templateRoot"
                        Value="{StaticResource ComboBox.Disabled.Border}" />
              </MultiDataTrigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                             Value="false" />
                  <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        TargetName="templateRoot"
                        Value="{StaticResource ComboBox.Disabled.Editable.Background}" />
                <Setter Property="BorderBrush"
                        TargetName="templateRoot"
                        Value="{StaticResource ComboBox.Disabled.Editable.Border}" />
                <Setter Property="Background"
                        TargetName="splitBorder"
                        Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}" />
                <Setter Property="BorderBrush"
                        TargetName="splitBorder"
                        Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}" />
              </MultiDataTrigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxEditableTemplate"
                     TargetType="{x:Type ComboBox}">
      <Grid x:Name="templateRoot"
            SnapsToDevicePixels="true">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*" />
          <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                            Width="0" />
        </Grid.ColumnDefinitions>
        <Popup x:Name="PART_Popup"
               AllowsTransparency="true"
               Grid.ColumnSpan="2"
               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
               Placement="Bottom"
               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
          <theme:SystemDropShadowChrome x:Name="shadow"
                                        Color="Transparent"
                                        MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                        MaxHeight="{TemplateBinding MaxDropDownHeight}">
            <Border x:Name="dropDownBorder"
                    Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                    BorderThickness="1"
                    BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
              <ScrollViewer x:Name="DropDownScrollViewer">
                <Grid x:Name="grid"
                      RenderOptions.ClearTypeHint="Enabled">
                  <Canvas x:Name="canvas"
                          HorizontalAlignment="Left"
                          Height="0"
                          VerticalAlignment="Top"
                          Width="0">
                    <Rectangle x:Name="opaqueRect"
                               Fill="{Binding Background, ElementName=dropDownBorder}"
                               Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                               Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                  </Canvas>
                  <ItemsPresenter x:Name="ItemsPresenter"
                                  KeyboardNavigation.DirectionalNavigation="Contained"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </Grid>
              </ScrollViewer>
            </Border>
          </theme:SystemDropShadowChrome>
        </Popup>
        <ToggleButton x:Name="toggleButton"
                      Background="{TemplateBinding Background}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      Grid.ColumnSpan="2"
                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                      Style="{StaticResource ComboBoxToggleButton}" />
        <Border x:Name="border"
                Background="{StaticResource TextBox.Static.Background}"
                Margin="{TemplateBinding BorderThickness}">
          <TextBox x:Name="PART_EditableTextBox"
                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                   IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                   Margin="{TemplateBinding Padding}"
                   Style="{StaticResource ComboBoxEditableTextBox}"
                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Border>
      </Grid>
      <ControlTemplate.Triggers>
        <Trigger Property="IsEnabled"
                 Value="false">
          <Setter Property="Opacity"
                  TargetName="border"
                  Value="0.56" />
        </Trigger>
        <Trigger Property="IsKeyboardFocusWithin"
                 Value="true">
          <Setter Property="Foreground"
                  Value="Black" />
        </Trigger>
        <Trigger Property="HasDropShadow"
                 SourceName="PART_Popup"
                 Value="true">
          <Setter Property="Margin"
                  TargetName="shadow"
                  Value="0,0,5,5" />
          <Setter Property="Color"
                  TargetName="shadow"
                  Value="#71000000" />
        </Trigger>
        <Trigger Property="HasItems"
                 Value="false">
          <Setter Property="Height"
                  TargetName="dropDownBorder"
                  Value="95" />
        </Trigger>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="IsGrouping"
                       Value="true" />
            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                       Value="false" />
          </MultiTrigger.Conditions>
          <Setter Property="ScrollViewer.CanContentScroll"
                  Value="false" />
        </MultiTrigger>
        <Trigger Property="ScrollViewer.CanContentScroll"
                 SourceName="DropDownScrollViewer"
                 Value="false">
          <Setter Property="Canvas.Top"
                  TargetName="opaqueRect"
                  Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
          <Setter Property="Canvas.Left"
                  TargetName="opaqueRect"
                  Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
        </Trigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxTemplate"
                     TargetType="{x:Type ComboBox}">
      <Grid x:Name="templateRoot"
            SnapsToDevicePixels="true">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*" />
          <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                            Width="0" />
        </Grid.ColumnDefinitions>
        <Popup x:Name="PART_Popup"
               AllowsTransparency="true"
               Grid.ColumnSpan="2"
               IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
               Margin="1"
               Placement="Bottom"
               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
          <theme:SystemDropShadowChrome x:Name="shadow"
                                        Color="Transparent"
                                        MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                        MaxHeight="{TemplateBinding MaxDropDownHeight}">
            <Border x:Name="dropDownBorder"
                    Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                    BorderThickness="1"
                    BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
              <ScrollViewer x:Name="DropDownScrollViewer">
                <Grid x:Name="grid"
                      RenderOptions.ClearTypeHint="Enabled">
                  <Canvas x:Name="canvas"
                          HorizontalAlignment="Left"
                          Height="0"
                          VerticalAlignment="Top"
                          Width="0">
                    <Rectangle x:Name="opaqueRect"
                               Fill="{Binding Background, ElementName=dropDownBorder}"
                               Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                               Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                  </Canvas>
                  <ItemsPresenter x:Name="ItemsPresenter"
                                  KeyboardNavigation.DirectionalNavigation="Contained"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </Grid>
              </ScrollViewer>
            </Border>
          </theme:SystemDropShadowChrome>
        </Popup>
        <ToggleButton x:Name="toggleButton"
                      Background="{TemplateBinding Background}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      Grid.ColumnSpan="2"
                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                      Style="{StaticResource ComboBoxToggleButton}" />
        <ContentPresenter x:Name="contentPresenter"
                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                          Content="{TemplateBinding SelectionBoxItem}"
                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          IsHitTestVisible="false"
                          Margin="{TemplateBinding Padding}"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
      </Grid>
      <ControlTemplate.Triggers>
        <Trigger Property="HasDropShadow"
                 SourceName="PART_Popup"
                 Value="true">
          <Setter Property="Margin"
                  TargetName="shadow"
                  Value="0,0,5,5" />
          <Setter Property="Color"
                  TargetName="shadow"
                  Value="#71000000" />
        </Trigger>
        <Trigger Property="HasItems"
                 Value="false">
          <Setter Property="Height"
                  TargetName="dropDownBorder"
                  Value="95" />
        </Trigger>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="IsGrouping"
                       Value="true" />
            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                       Value="false" />
          </MultiTrigger.Conditions>
          <Setter Property="ScrollViewer.CanContentScroll"
                  Value="false" />
        </MultiTrigger>
        <Trigger Property="ScrollViewer.CanContentScroll"
                 SourceName="DropDownScrollViewer"
                 Value="false">
          <Setter Property="Canvas.Top"
                  TargetName="opaqueRect"
                  Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
          <Setter Property="Canvas.Left"
                  TargetName="opaqueRect"
                  Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
        </Trigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ComboBoxStyle1"
           TargetType="{x:Type ComboBox}">
      <Setter Property="FocusVisualStyle"
              Value="{StaticResource FocusVisual}" />
      <Setter Property="Background"
              Value="{StaticResource ComboBox.Static.Background}" />
      <Setter Property="BorderBrush"
              Value="{StaticResource ComboBox.Static.Border}" />
      <Setter Property="Foreground"
              Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
      <Setter Property="BorderThickness"
              Value="1" />
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
              Value="Auto" />
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
              Value="Auto" />
      <Setter Property="Padding"
              Value="6,3,5,3" />
      <Setter Property="ScrollViewer.CanContentScroll"
              Value="true" />
      <Setter Property="ScrollViewer.PanningMode"
              Value="Both" />
      <Setter Property="Stylus.IsFlicksEnabled"
              Value="False" />
      <Setter Property="Template"
              Value="{StaticResource ComboBoxTemplate}" />
      <Style.Triggers>
        <Trigger Property="IsEditable"
                 Value="true">
          <Setter Property="IsTabStop"
                  Value="false" />
          <Setter Property="Padding"
                  Value="2" />
          <Setter Property="Template"
                  Value="{StaticResource ComboBoxEditableTemplate}" />
        </Trigger>
      </Style.Triggers>
    </Style>
  </Page.Resources>

  <Grid>
    <!-- Processing Information -->
    <Grid Grid.Row="2"
          Height="200"
          Width="400"
          VerticalAlignment="Center"
          HorizontalAlignment="Center"
          Visibility="{Binding ProcessingMessageVisibility}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="1*" />
        <ColumnDefinition Width="4*" />
      </Grid.ColumnDefinitions>
      <fa:ImageAwesome Grid.Column="0"
                       Icon="Cog"
                       Spin="True"
                       SpinDuration="10"
                       Height="50"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       Foreground="#3b00a8"
                       Opacity="0.7"
                       Visibility="{Binding ProcessingMessageVisibility}" />
      <TextBlock Grid.Column="1"
                 Text="{Binding ProcessingStage}"
                 Margin="20 0 0 0"
                 FontSize="20"
                 FontWeight="SemiBold"
                 Foreground="#3b00a8"
                 Opacity="0.7"
                 TextWrapping="Wrap"
                 VerticalAlignment="Center" />
    </Grid>

    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="30" />
        <RowDefinition Height="1*" />
      </Grid.RowDefinitions>
      <StackPanel  Grid.Row="0"
                    Orientation="Horizontal">
          <Button Width="30"
                  Margin="10 0 0 0"
                  Command="{Binding Run}"
                  Background="Transparent"
                  ToolTip="Rank Topics"
                  BorderThickness="0"
                  Cursor="Hand">
            <md:PackIcon Kind="PlayCircle"
                         Height="25"
                         Width="25" />
          </Button>
          <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
        </StackPanel>
      <StackPanel Grid.Row="1">
        <Grid Name="MainGrid"
          Visibility="{Binding ThemesViewVisibility}">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="2*"/>
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="{Binding RelativeSource={RelativeSource AncestorType=StackPanel}, Path=ActualHeight}"/>
          </Grid.RowDefinitions>
          <StackPanel Grid.Column="0"
                      Grid.Row="0">
            <Grid Height="20">
              <TextBlock Text="Hierarchical Clusters"
                         FontSize="14"
                         FontWeight="SemiBold"
                         Foreground="white"
                         HorizontalAlignment="Center" />
              <Grid.Background>
                <LinearGradientBrush StartPoint="0.5,0"
                                     EndPoint="0.5,1">
                  <GradientStop Color="#b295e8"
                                Offset="0" />
                  <GradientStop Color="#947cc2"
                                Offset="1.0" />
                </LinearGradientBrush>
              </Grid.Background>
            </Grid>
            <TreeView Name="ClusterTree"
                      ItemsSource="{Binding DataSource}"
                      BorderBrush="{x:Null}"
                      Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Grid}}, Path=ActualHeight}">
              <TreeView.ItemTemplate>
                <HierarchicalDataTemplate DataType="{x:Type vm:Item}"
                                          ItemsSource="{Binding Children}">
                  <Grid>
                    <TextBlock Grid.Column="0"
                               Text="{Binding Name}"
                               Height="18" />
                      <Border CornerRadius="5"
                            BorderThickness="1"
                              BorderBrush="#e7d1ff"
                              Padding="2 0"
                              Cursor="Hand"
                              Visibility="{Binding LevelMarkerVisibility}">
                      <Border.Background>
                        <LinearGradientBrush StartPoint="0.5,0"
                                             EndPoint="0.5,1">
                          <GradientStop Color="#fbf7ff"
                                        Offset="0" />
                          <GradientStop Color="#f3e8ff"
                                        Offset="1.0" />
                        </LinearGradientBrush>
                      </Border.Background>
                      <Grid Visibility="{Binding LevelMarkerVisibility}">
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition />
                          <ColumnDefinition />
                          <ColumnDefinition />
                          <ColumnDefinition />
                          <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0"
                                   Text="{Binding Level}"
                                   Height="16"
                                   FontStyle="Italic"
                                   FontSize="11">
                          <TextBlock.ToolTip>
                            <ToolTip>
                              <TextBlock TextWrapping="Wrap"
                                         Text="Indentation Level" />
                            </ToolTip>
                          </TextBlock.ToolTip>
                        </TextBlock>
                        <Separator Grid.Column="1"
                                   Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                        <TextBlock  Grid.Column="2"
                                    Text="{Binding TopicCount}"
                                    Height="16"
                                    FontStyle="Italic"
                                    FontSize="11">
                          <TextBlock.ToolTip>
                            <ToolTip>
                              <TextBlock TextWrapping="Wrap"
                                         Text="Number of topics in the theme" />
                            </ToolTip>
                          </TextBlock.ToolTip>
                        </TextBlock>
                        <Separator Grid.Column="3"
                          Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                        <TextBlock  Grid.Column="4"
                                    Text="{Binding Dissimilarity}"
                                    Height="16"
                                   FontStyle="Italic"
                                    FontSize="11">
                          <TextBlock.ToolTip>
                            <ToolTip>
                              <TextBlock TextWrapping="Wrap"
                                         Text="Dissimilarity" />
                            </ToolTip>
                          </TextBlock.ToolTip>
                        </TextBlock>
                      </Grid>
                      </Border>
                  </Grid>
                </HierarchicalDataTemplate>
              </TreeView.ItemTemplate>
              <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                  <Setter Property="IsExpanded" Value="True"/>
                </Style>
              </TreeView.ItemContainerStyle>
            </TreeView>
          </StackPanel>
          <GridSplitter Grid.Column="1"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Stretch"
                        Width="3"
                        ShowsPreview="True"
                        Background="#e3e3e3" />
          <Grid Grid.Column="2">
            <Grid.RowDefinitions>
              <RowDefinition />
              <RowDefinition />
              <RowDefinition />
            </Grid.RowDefinitions>
            <DockPanel Grid.Row="0">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
              </Grid.ColumnDefinitions>
            
              <!-- Left Half of Themes Section -->
              <StackPanel Grid.Column="0"
                          Grid.Row="0"
                          Margin="30 0">
                    <Grid Height="20"
                          Margin="0 0 0 10">
                      <TextBlock Text="Cluster Configuration"
                                 FontSize="14"
                                 FontWeight="SemiBold"
                                 Foreground="white"
                                 HorizontalAlignment="Center" />
                      <Grid.Background>
                        <LinearGradientBrush StartPoint="0.5,0"
                                             EndPoint="0.5,1">
                          <GradientStop Color="#b295e8"
                                        Offset="0" />
                          <GradientStop Color="#947cc2"
                                        Offset="1.0" />
                        </LinearGradientBrush>
                      </Grid.Background>
                    </Grid>
                
                <!--Distance Measure-->
                <Grid Margin="20 5 0 0">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200" />
                    <ColumnDefinition Width="*"
                                      MaxWidth="300" />
                  </Grid.ColumnDefinitions>
                  <Label Grid.Column="0"
                         Content="Distance Measure">
                      <Label.ToolTip>
                        <ToolTip MaxWidth="300">
                          <TextBlock TextWrapping="Wrap"
                                     Text="Enter comma separated substrings that appear at the end of the file names. &#x0a;For example, enter &quot;faq&quot;, if the topic name is &quot;help-t-faq.html&quot;." />
                        </ToolTip>
                      </Label.ToolTip>
                  </Label>
                  <ComboBox Style="{DynamicResource ComboBoxStyle1}"
                            Grid.Column="1"
                            x:Name="linkageSelectionCombo"
                            Width="Auto"
                            VerticalAlignment="Center"
                            ItemsSource="{Binding Linkages}"
                            SelectedItem="{Binding SelectedLinkage}"></ComboBox>
                </Grid>

                <!--Root Cluster Dissimilarity-->
                <Grid Margin="20 5 0 0">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200" />
                    <ColumnDefinition Width="*"
                                      MaxWidth="300" />
                  </Grid.ColumnDefinitions>
                  <Label Grid.Column="0">Root Cluster Distance</Label>
                    <Border Grid.Column="1"
                            CornerRadius="5"
                            Padding="5"
                            Height="25">
                      <TextBlock Text="{Binding SelectedDissimilarity}"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                                 FontSize="14"
                                 FontWeight="Light"  />
                    </Border>
                  </Grid>
                
                <!--Subcluster Distance-->
                <Grid Margin="20 5 0 0">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200" />
                    <ColumnDefinition Width="*"
                                      MaxWidth="300" />
                    <ColumnDefinition Width="Auto"
                                      MinWidth="100"
                                      MaxWidth="150" />
                  </Grid.ColumnDefinitions>
                  <Label Grid.Column="0">Subcluster Distance</Label>
                  <Slider x:Name="SubClusterSlider"
                          Grid.Column="1"
                          Value="{Binding DistanceSliderValue}"
                          Minimum="0"
                          Maximum="{Binding MaxValue}"
                          Ticks="{Binding Ticks}"
                          IsSnapToTickEnabled="True"
                          VerticalAlignment="Center">
                      <beh:Interaction.Triggers>
                        <beh:EventTrigger EventName="PreviewMouseUp"
                                          SourceObject="{Binding ElementName=SubClusterSlider}">
                          <beh:InvokeCommandAction Command="{Binding SubClusterSliderCommand}" />
                        </beh:EventTrigger>
                      </beh:Interaction.Triggers>
                    </Slider>
                    <Border Grid.Column="2"
                            Background="#f7f2ff"
                            CornerRadius="5"
                            Padding="5"
                            Margin="10 0"
                            Height="25">
                      <TextBlock Text="{Binding SubClusterDistance}"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 FontSize="14"
                                 FontWeight="Light" />
                    </Border>
                  </Grid>

                <!--Cluster Fuzzyness-->
                <Grid Margin="20 5 0 0">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200" />
                    <ColumnDefinition Width="*"
                                      MaxWidth="300" />
                    <ColumnDefinition Width="Auto"
                                      MinWidth="100"
                                      MaxWidth="150" />
                  </Grid.ColumnDefinitions>
                  <Label Grid.Column="0">Distance Fuzzyness</Label>
                  <Slider x:Name="FuzzynessSlider"
                          Grid.Column="1"
                          Value="{Binding FuzzynessSliderValue}"
                          Minimum="0"
                          Maximum="100"
                          VerticalAlignment="Center">
                      <beh:Interaction.Triggers>
                        <beh:EventTrigger EventName="PreviewMouseUp"
                                          SourceObject="{Binding ElementName=FuzzynessSlider}">
                          <beh:InvokeCommandAction Command="{Binding FuzzynessSliderCommand}" />
                        </beh:EventTrigger>
                      </beh:Interaction.Triggers>
                  </Slider>
                    <Border Grid.Column="2"
                            Background="#f7f2ff"
                            CornerRadius="5"
                            Padding="5"
                            Margin="10 0"
                            Height="25">
                    <TextBlock Text="{Binding FuzzynessSliderValue}"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontSize="14"
                               FontWeight="Light"/>
                    </Border>
                  </Grid>

              </StackPanel>


              <!-- Dissimilarity Chart -->
              <lvc:CartesianChart Grid.Column="1"
                                  Grid.Row="1"
                                  Series="{Binding ChartData}"
                                  DataClickCommand="{Binding UpdateTree}"
                                  VerticalAlignment="Stretch">
                <lvc:CartesianChart.SeriesColors>
                  <lvc:ColorsCollection>
                    <Color>#947cc2</Color>
                  </lvc:ColorsCollection>
                </lvc:CartesianChart.SeriesColors>
                <lvc:CartesianChart.AxisX>
                  <lvc:Axis Title="Dissimilarity Levels"
                            Labels="{Binding ChartLabels}">
                    <lvc:Axis.Sections>
                      <lvc:AxisSection Value="{Binding MaxValue}"
                                       StrokeThickness="1"
                                       Stroke="#aaaaaa"
                                       Opacity=".5">
                      </lvc:AxisSection>
                      <lvc:AxisSection Value="{Binding DistanceSliderValue}"
                                       StrokeThickness="1"
                                         Stroke="#b295e8"
                                       Opacity="0.3">
                      </lvc:AxisSection>
                    </lvc:Axis.Sections>
                  </lvc:Axis>
                </lvc:CartesianChart.AxisX>
              </lvc:CartesianChart>
            
            </Grid>
            </DockPanel>
            <GridSplitter Grid.Row="1"
                          VerticalAlignment="Top"
                          HorizontalAlignment="Stretch"
                          Height="3"
                          ShowsPreview="True"
                          Background="#e3e3e3" />
            <DockPanel Grid.Row="2">
              <Grid>
              </Grid>
            </DockPanel>
          </Grid>
        </Grid>
      </StackPanel>
    </Grid>
  </Grid>
</Page>
